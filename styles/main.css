@charset "UTF-8";
/* 
Använde normalize-css för att resetta allt. Hoppas det var tillåtet :) Plantify-stilarna börjar efter rad 400 
*/
/* ==========================================================================
   Normalize.scss settings
   ========================================================================== */
/**
 * Includes legacy browser support IE6/7
 *
 * Set to false if you want to drop support for IE6 and IE7
 */
/* Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using
 *  `em` units.
 */
@import url("https://fonts.googleapis.com/css?family=Lato:300,400|Quicksand:400,700");
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active, a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Addresses styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Improves image quality when scaled in IE 7.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *  Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 * 4. Improves appearance and consistency in all browsers.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *  and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *  `input` and others.
 * 4. Removes inner spacing in IE 7 without affecting normal text inputs.
 *  Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 *  Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 * 3. Corrects text not wrapping in Firefox 3.
 * 4. Corrects alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/* ==========================================================================
   Plantify styles
   ========================================================================== */
/* ==========================================================================
   Base styles
   ========================================================================== */
html {
  font-size: 100%;
  -webkit-tap-highlight-color: transparent;
}

/* Länkar */
a {
  color: #16a085;
  text-decoration: none;
}

a:hover, a:focus {
  color: #1abc9c;
  text-decoration: underline;
}

a:focus {
  outline: 0;
}

/* Clearfix */
.clearfix:before,
.clearfix:after {
  content: " ";
  display: table;
}

.clearfix:after {
  clear: both;
}

/*
 * For IE 6/7 only
 * Include this rule to trigger hasLayout and contain floats.
 */
.clearfix {
  *zoom: 1;
}

/*
 * Tar bort margin och padding på alla listor
 */
ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

figure {
  margin: 0;
}

/* ==========================================================================
   Layout
   ========================================================================== */
/*
 * Container - sätter bredden på sidan
 */
.container {
  padding: 0 0.75em;
  margin: 0 auto;
}

@media (min-width: 1200px) {
  .container {
    padding: 0;
    width: 940px;
  }
}

/*
 * Rader och kolumner
 */
.row {
  display: table;
  width: 100%;
  margin: 0 -0.6875rem;
}

.column-4 {
  float: left;
  width: 33.3333%;
  padding: 0 0.6875rem;
  box-sizing: border-box;
}

.column-8 {
  float: left;
  width: 66.6667%;
  padding: 0 0.6875rem;
  box-sizing: border-box;
}

.column-6 {
  float: left;
  width: 50%;
  padding: 0 0.6875rem;
  box-sizing: border-box;
}

.theme-img {
  margin: 0;
}

/* För att göra bilder responsiva */
.img-responsive {
  max-width: 100%;
  width: 100%;
  height: auto;
}

/* ==========================================================================
   Typsnitt och text
   Tittade på den här för inspiration http://spencermortensen.com/articles/typographic-scale/ 
   Försökte mig på att använda rem-mått. Grundstorlek 100% dvs 16px på font och en baslinje 16 * 1,5 = 24px
   ========================================================================== */
/*
 * Header på alla sidor
*/
.page-header {
  margin: 2.5rem 0;
}

.page-header h1 {
  font-size: 3em;
  line-height: 1;
}

.lead {
  font-size: 1.125em;
  line-height: 1,14285714285714;
}

/*
 * Grundstil för rubriker
*/
h1, h2, h3, h4, h5, h6 {
  font-family: "Quicksand";
  margin: 0.75rem 0;
  font-weight: 400;
}

h1 {
  font-size: 2.25em;
  /* 36px --> 36 ÷ 16 = 2.25 */
  line-height: 1.333;
  /* 48px --> 36 ÷ 48 = 1.333 */
}

h2 {
  font-size: 1.5em;
  /* 24px --> 24 ÷ 16 = 1.5 */
  line-height: 1;
  /* 24px --> 24 ÷ 24 = 1) */
}

h3 {
  font-size: 1,3125em;
  /* 21px --> 21 ÷ 16 = 1,3125 */
  line-height: 1.333;
  /* 24px --> 24 ÷ 18 = 1.2 */
}

h4 {
  font-size: 1.125em;
  /* 18px --> 18 ÷ 16 = 1.125 */
  line-height: 1,14285714285714;
  /* 24px --> 24 ÷ 21 = 1,14285714285714 */
}

h5, h6 {
  font-size: 1em;
  /* 16px --> 16 ÷ 16 = 1 */
  line-height: 1.5;
  /* 24px --> 24 ÷ 16 = 1.5 */
}

p {
  margin: 0.75em 0;
}

/* ==========================================================================
	Toppnavigation
   ========================================================================== */
.navbar {
  display: block;
  height: auto;
  padding-bottom: 0;
}

/* Stilar för listor och länkar i navbaren */
.navbar-nav li {
  float: left;
  display: block;
}

.navbar-nav li a {
  color: #777;
  display: block;
  padding: 0.75rem 1rem;
  line-height: 1.5;
}

.navbar-nav li a:hover, .navbar-nav li a:focus {
  text-decoration: none;
  color: #333;
}

.navbar-nav li.active a {
  color: #16a085;
}

/* Flyta navigationen till höger */
.navbar-right {
  float: right;
}

/* logo och site-namn i navbar */
.navbar-header {
  position: relative;
  margin-left: -1rem;
  float: left;
}

.navbar-header .logo {
  position: absolute;
  left: 1rem;
  top: 0.375rem;
}

.navbar-header a {
  display: block;
  font-weight: 700;
  font-size: 1.25em;
  line-height: 1.2;
  padding: 0.75rem 1rem;
  margin-left: 2.25rem;
}

.navbar-header a:hover {
  text-decoration: none;
}

/* ==========================================================================
	Tabellstilar
   ========================================================================== */
.table {
  border: 1px solid #e8e8e8;
  width: 100%;
  max-width: 100%;
  margin-bottom: 1.5em;
  font-size: 0.875rem;
}

.table > thead > tr > th,
.table > thead > tr > td,
.table > tbody > tr > th,
.table > tbody > tr > td,
.table > tfoot > tr > th,
.table > tfoot > tr > td {
  padding: 0.75rem;
  line-height: 1.5;
  vertical-align: top;
  border: 1px solid #e8e8e8;
}

.table > thead > tr > th {
  font-size: 1.5rem;
  text-align: left;
  vertical-align: bottom;
  border-bottom: 2px solid #e8e8e8;
}

.table > caption + thead > tr:first-child > th,
.table > caption + thead > tr:first-child > td,
.table > colgroup + thead > tr:first-child > th,
.table > colgroup + thead > tr:first-child > td,
.table > thead:first-child > tr:first-child > th,
.table > thead:first-child > tr:first-child > td {
  border-top: 0;
}

.table-striped > tbody > tr:nth-of-type(odd) {
  background-color: #f0f0f0;
}

/* ==========================================================================
	Formulärstilar
   ========================================================================== */
/* Gruppera formelement */
.form-group {
  margin-bottom: 1.5em;
}

.form-group label {
  /* Formlablar */
  display: block;
  font-size: 1em;
  font-weight: 600;
  line-height: 1.5em;
  padding: 0.375rem 0;
  width: 100%;
  /* For legacy WebKit based browsers */
  /* For legacy (Firefox <29) Gecko based browsers */
  box-sizing: border-box;
}

/* Klass för alla formkontroller - input, textarea osv */
.form-control {
  border: solid 1px #ddd;
  margin: 0;
  width: 100%;
  display: block;
  padding: 0.375rem 0.75rem;
  font-size: 1em;
  line-height: 1.5em;
  /* For legacy WebKit based browsers */
  /* For legacy (Firefox <29) Gecko based browsers */
  box-sizing: border-box;
}

/* Knappstil */
.btn {
  border: solid 1px #16a085;
  background: #16a085;
  padding: 0.375rem 0.75rem;
  display: block;
  color: #fff;
  border-radius: 0.375rem;
  outline: 0;
}

.btn:hover {
  background: #1abc9c;
}

/* Grundstyles för body. Basstorlek och line-height för text*/
body {
  background: #fafafa;
  font-family: "Lato", "Helvetica Neue", Helvetica, Arial, sans-serif;
  color: #333;
  font-size: 1em;
  line-height: 1.5;
}

/* Headern på första sidan */
.home-header {
  color: #fff;
  background-color: #1fa67a;
  padding: 3.75rem 0;
}

.home-header h1 {
  font-size: 3.75em;
  line-height: 1.2;
  letter-spacing: -1px;
}

.home-header p {
  font-size: 1.5em;
  font-weight: 200;
  line-height: 1.5;
}

/* padding på .section för att spaca ut lite */
.section {
  padding: 2.25rem 0;
}

/* Stilar för boxarna på plant-themes sidan. Lite overwrite på fontstorlekar*/
.theme-info {
  padding: 1.5rem;
  background: #fff;
  min-height: 14rem;
}

.theme-info h2 {
  margin-top: 0;
}

.theme-info p {
  color: #555;
  font-size: 0.875rem;
  line-height: 1.5rem;
  margin: 0;
}

/* Logon på about-us sidan*/
figure.logo {
  margin-top: -6em;
}

.browserupgrade {
  margin: 0.2rem 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
